swagger: "2.0"

info:
  version: 0.1.0
  title: Online
  description: Yakit Online Service

schemes:
  - http
basePath: /api
consumes:
  - application/json
produces:
  - application/json

#securityDefinitions:
#  user:
#    type: apiKey
#    in: header
#    name: Authorization
#  trusted:
#    type: apiKey
#    in: header
#    name: Authorization

#security:
#  - user: [ ]

paths:
  # 回调地址
  /auth/redirect:
    get:
      security: [ ]
      parameters:
        - in: query
          type: string
          description: "auth 平台 返回的用户授权码"
          name: code
        - in: query
          name: auth_type
          type: string
          description: "auth 平台类型"
      responses:
        200:
          $ref: "#/responses/ActionSucceeded"
  # 获取跳转URL
  /auth/from:
    get:
      security: [ ]
      parameters:
        - in: query
          type: string
          description: "login auth type"
          name: type
      responses:
        200:
          description: "Fetch Github Oauth URL"
          schema:
            type: string
  # 支持的三方登录平台
  /auth/list:
    get:
      security: [ ]
      parameters: [ ]
      responses:
        200:
          description: "支持的三方登录平台"
          schema:
            $ref: "#/definitions/AuthList"

responses:
  ActionSucceeded:
    description: API 调用成功
    schema:
      $ref: '#/definitions/ActionSucceeded'
  ActionFailed:
    description: API 调用失败
    schema:
      $ref: '#/definitions/ActionFailed'

definitions:
  AuthList:
    type: array
    items:
      type: object
      properties:
        auth_name:
          type: string
          description: 平台名字
        auth_type:
          type: string
          description: 平台类型
        auth_icon:
          type: string
          description: 平台图标
  ActionFailed:
    type: object
    required:
      - from
      - ok
      - reason
    properties:
      from:
        type: string
        description: 来源于哪个 API
      ok:
        type: boolean
        description: 执行状态
      reason:
        type: string
  ActionSucceeded:
    type: object
    required:
      - from
      - ok
    properties:
      from:
        type: string
        description: 来源于哪个 API
      ok:
        type: boolean
        description: 执行状态
  GormBaseModel:
    type: object
    required:
      - id
      - created_at
      - updated_at
    properties:
      id:
        type: integer
      created_at:
        type: integer
      updated_at:
        type: integer
  User:
    allOf:
      - $ref: "#/definitions/GormBaseModel"
    properties:
      name:
        type: string
        description: 用户名称
      password:
        type: string
        description: 用户密码
      phone:
        type: string
      email:
        type: string
      avtor:
        type: string
      register_time:
        type: integer
      status:
        type: integer
      login_time:
        type: integer
  UserAuthor:
    allOf:
      - $ref: "#/definitions/GormBaseModel"
    properties:
      auth_code:
        type: string
        description: 用户名称
      auth_type:
        type: string
        description: 用户密码
      phone:
        type: string
      extend:
        type: string
        description: 额外信息，直接存JSON，比如三方用户信息
      access_token:
        type: string
      access_time:
        type: string
      user_id:
        type: integer